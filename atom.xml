<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>倾听枫声</title>
  <subtitle>lexzhao</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.lexzhao.top/"/>
  <updated>2018-10-02T09:58:58.211Z</updated>
  <id>http://www.lexzhao.top/</id>
  
  <author>
    <name>倾听枫声</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>生成式对抗网</title>
    <link href="http://www.lexzhao.top/2018/10/02/%E7%94%9F%E6%88%90%E5%BC%8F%E5%AF%B9%E6%8A%97%E7%BD%91/"/>
    <id>http://www.lexzhao.top/2018/10/02/生成式对抗网/</id>
    <published>2018-10-02T09:58:31.000Z</published>
    <updated>2018-10-02T09:58:58.211Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;14年Goodfellow提出Generative adversarial nets即生成式对抗网络[5]，它要解决的问题是如何从训练样本中学习出新样本，训练样本是图片就生成新图片，训练样本是文章就输出新文章等等。如果能够知道训练样本的分布p(x)，那么就可以在分布中随机采
    
    </summary>
    
      <category term="技术" scheme="http://www.lexzhao.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="神经网络， 生成式对抗网" scheme="http://www.lexzhao.top/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%EF%BC%8C-%E7%94%9F%E6%88%90%E5%BC%8F%E5%AF%B9%E6%8A%97%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>深度生成模型预算法</title>
    <link href="http://www.lexzhao.top/2018/10/02/%E6%B7%B1%E5%BA%A6%E7%94%9F%E6%88%90%E6%A8%A1%E5%9E%8B%E9%A2%84%E7%AE%97%E6%B3%95/"/>
    <id>http://www.lexzhao.top/2018/10/02/深度生成模型预算法/</id>
    <published>2018-10-02T09:54:08.000Z</published>
    <updated>2018-10-02T09:57:43.273Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Generative Adversarial Nets,核心思想是从训练样本中学习所对应的概率分布，来期望根据概率分布函数获取更多的生成样本来实现数据的扩张。包括两个子网络模型：&lt;br&gt;生成模型：使得生成的“伪”图像尽可能与“自然”图像的分布一致&lt;br&gt;判别模型：在生成的“
    
    </summary>
    
      <category term="技术" scheme="http://www.lexzhao.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="神经网络， 生成式对抗网" scheme="http://www.lexzhao.top/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%EF%BC%8C-%E7%94%9F%E6%88%90%E5%BC%8F%E5%AF%B9%E6%8A%97%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>Jensen-Shannon散度</title>
    <link href="http://www.lexzhao.top/2018/10/02/Jensen-Shannon%E6%95%A3%E5%BA%A6/"/>
    <id>http://www.lexzhao.top/2018/10/02/Jensen-Shannon散度/</id>
    <published>2018-10-02T09:54:08.000Z</published>
    <updated>2018-10-02T09:56:00.392Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;KL散度（Kullback-Leibler divergence）&lt;br&gt;在概率论或信息论中，KL散度( Kullback–Leibler divergence)，又称相对熵（relative entropy)，是描述两个概率分布P和Q差异的一种方法。它是非对称的，这意味着
    
    </summary>
    
      <category term="技术" scheme="http://www.lexzhao.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="神经网络， 生成式对抗网" scheme="http://www.lexzhao.top/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%EF%BC%8C-%E7%94%9F%E6%88%90%E5%BC%8F%E5%AF%B9%E6%8A%97%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>AccountMerge(UnionFind)</title>
    <link href="http://www.lexzhao.top/2017/12/22/AccountMerge-UnionFind/"/>
    <id>http://www.lexzhao.top/2017/12/22/AccountMerge-UnionFind/</id>
    <published>2017-12-22T15:24:24.000Z</published>
    <updated>2017-12-24T15:39:27.984Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;721. Accounts Merge&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://opeygftv2.bkt.clouddn.com/721.JPG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.lexzhao.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Leetcode" scheme="http://www.lexzhao.top/tags/Leetcode/"/>
    
      <category term="UnionFind" scheme="http://www.lexzhao.top/tags/UnionFind/"/>
    
  </entry>
  
  <entry>
    <title>Spring源码曲径通幽(1)---Ioc控制反转</title>
    <link href="http://www.lexzhao.top/2017/12/03/Spring%E6%BA%90%E7%A0%81%E6%9B%B2%E5%BE%84%E9%80%9A%E5%B9%BD-1-Ioc%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC/"/>
    <id>http://www.lexzhao.top/2017/12/03/Spring源码曲径通幽-1-Ioc控制反转/</id>
    <published>2017-12-03T15:11:20.000Z</published>
    <updated>2017-12-03T15:12:12.746Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="技术" scheme="http://www.lexzhao.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Spring" scheme="http://www.lexzhao.top/tags/Spring/"/>
    
      <category term="Java" scheme="http://www.lexzhao.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Binary Search总结</title>
    <link href="http://www.lexzhao.top/2017/12/03/Binary-Search%E6%80%BB%E7%BB%93/"/>
    <id>http://www.lexzhao.top/2017/12/03/Binary-Search总结/</id>
    <published>2017-12-03T15:02:36.000Z</published>
    <updated>2017-12-03T15:04:43.527Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="技术" scheme="http://www.lexzhao.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Algorithm" scheme="http://www.lexzhao.top/tags/Algorithm/"/>
    
      <category term="Leetcode" scheme="http://www.lexzhao.top/tags/Leetcode/"/>
    
      <category term="BST" scheme="http://www.lexzhao.top/tags/BST/"/>
    
  </entry>
  
  <entry>
    <title>canPartitionKSubsets</title>
    <link href="http://www.lexzhao.top/2017/11/23/canPartitionKSubsets/"/>
    <id>http://www.lexzhao.top/2017/11/23/canPartitionKSubsets/</id>
    <published>2017-11-23T01:54:05.000Z</published>
    <updated>2017-11-23T10:32:54.846Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;拿出以下三道题来进行对比和总结。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;560. Subarray Sum Equals K&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;523. Continuous Subarray Sum&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;209. Minimum Size Subarray Sum&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;713. Subarray Product Less Than K&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.lexzhao.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Algorithm" scheme="http://www.lexzhao.top/tags/Algorithm/"/>
    
      <category term="Leetcode" scheme="http://www.lexzhao.top/tags/Leetcode/"/>
    
      <category term="DP" scheme="http://www.lexzhao.top/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>AkkA_OSGi避坑指南</title>
    <link href="http://www.lexzhao.top/2017/11/20/AkkA-OSGi%E9%81%BF%E5%9D%91%E6%8C%87%E5%8D%97/"/>
    <id>http://www.lexzhao.top/2017/11/20/AkkA-OSGi避坑指南/</id>
    <published>2017-11-20T15:47:41.000Z</published>
    <updated>2017-11-22T05:24:53.859Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;实验室项目需要，这段时间一直在搞AkkA框架在OSGi平台上的搭建，由于相关资料少之又少，可以说踩坑无数，于是有了写一篇避坑大全的想法。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://opeygftv2.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20171121105638.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.lexzhao.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="AkkA" scheme="http://www.lexzhao.top/tags/AkkA/"/>
    
      <category term="OSGi" scheme="http://www.lexzhao.top/tags/OSGi/"/>
    
      <category term="scala" scheme="http://www.lexzhao.top/tags/scala/"/>
    
  </entry>
  
  <entry>
    <title>Two Pointer总结</title>
    <link href="http://www.lexzhao.top/2017/11/19/Two-Pointer%E6%80%BB%E7%BB%93/"/>
    <id>http://www.lexzhao.top/2017/11/19/Two-Pointer总结/</id>
    <published>2017-11-19T06:32:47.000Z</published>
    <updated>2017-11-21T08:25:26.100Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前序&quot;&gt;&lt;a href=&quot;#前序&quot; class=&quot;headerlink&quot; title=&quot;前序&quot;&gt;&lt;/a&gt;&lt;strong&gt;前序&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Two Pointer应该说之前用到的还是很多的，像一次循环找到链表的中间元素，像快排等等，刚好这两天Leetcode刷到了Two Pointer这一块，借此机会做一个总结。在大多数适合于Two Pointer的场景下，恰当地使用Two pointer可以将复杂度维持在O(N)，特别是一些求解连续子序列相关的问题，Two pointer不失为一种很好地切入点。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.lexzhao.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Algorithm" scheme="http://www.lexzhao.top/tags/Algorithm/"/>
    
      <category term="Leetcode" scheme="http://www.lexzhao.top/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>递归  回溯  DFS</title>
    <link href="http://www.lexzhao.top/2017/11/06/%E9%80%92%E5%BD%92-%E5%9B%9E%E6%BA%AF-DFS/"/>
    <id>http://www.lexzhao.top/2017/11/06/递归-回溯-DFS/</id>
    <published>2017-11-06T07:22:17.000Z</published>
    <updated>2017-11-19T06:31:28.950Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;参考&lt;a href=&quot;http://blog.csdn.net/ffmpeg4976/article/details/45007439&quot;&gt;http://blog.csdn.net/ffmpeg4976/article/details/45007439&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在程序设计中，有相当一类求一组解，或求全部解或求最优解的问题，例如读者熟悉的八皇后问题，不是根据某种特定的计算法则，而是利用试探和回溯的搜索技术求解。回溯法也是设计递归过程的一种重要方法，它的求解过程实质上是一个先序遍历一棵”状态树”的过程,只是这棵树不是遍历前预先建立的,而是隐含在遍历过程中。&lt;/p&gt;
&lt;p&gt;《数据结构》(严蔚敏)&lt;br&gt;怎么理解这段话呢？&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.lexzhao.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Algorithm" scheme="http://www.lexzhao.top/tags/Algorithm/"/>
    
      <category term="dfs" scheme="http://www.lexzhao.top/tags/dfs/"/>
    
      <category term="DP" scheme="http://www.lexzhao.top/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>Construct Binary Tree from Array</title>
    <link href="http://www.lexzhao.top/2017/11/06/Construct-Binary-Tree-from-Array/"/>
    <id>http://www.lexzhao.top/2017/11/06/Construct-Binary-Tree-from-Array/</id>
    <published>2017-11-06T07:16:41.000Z</published>
    <updated>2017-11-06T07:28:14.395Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;105. Construct Binary Tree from Preorder and Inorder Traversal&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;106. Construct Binary Tree from Inorder and Postorder Traversal&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以说是两道再经典不过的dfs题了,思路都很清晰，在这里记录一下吧&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.lexzhao.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Algorithm" scheme="http://www.lexzhao.top/tags/Algorithm/"/>
    
      <category term="Leetcode" scheme="http://www.lexzhao.top/tags/Leetcode/"/>
    
      <category term="dfs" scheme="http://www.lexzhao.top/tags/dfs/"/>
    
  </entry>
  
  <entry>
    <title>动态规划问题带备忘自顶向下方法的典型应用</title>
    <link href="http://www.lexzhao.top/2017/11/05/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E9%97%AE%E9%A2%98%E5%B8%A6%E5%A4%87%E5%BF%98%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E7%9A%84%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8/"/>
    <id>http://www.lexzhao.top/2017/11/05/动态规划问题带备忘自顶向下方法的典型应用/</id>
    <published>2017-11-05T06:29:22.000Z</published>
    <updated>2017-11-05T06:56:31.102Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 44. Wildcard Matching&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 10. Regular Expression Matching&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://opeygftv2.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20171105145034.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.lexzhao.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Algorithm" scheme="http://www.lexzhao.top/tags/Algorithm/"/>
    
      <category term="Leetcode" scheme="http://www.lexzhao.top/tags/Leetcode/"/>
    
      <category term="DP" scheme="http://www.lexzhao.top/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>Map在动态规划问题当中的应用</title>
    <link href="http://www.lexzhao.top/2017/11/05/Map%E5%9C%A8%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E9%97%AE%E9%A2%98%E5%BD%93%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    <id>http://www.lexzhao.top/2017/11/05/Map在动态规划问题当中的应用/</id>
    <published>2017-11-05T06:27:59.000Z</published>
    <updated>2017-11-05T06:48:07.782Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 140. Word Break II&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 638. Shopping Offers&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://opeygftv2.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20171105143248.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.lexzhao.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Algorithm" scheme="http://www.lexzhao.top/tags/Algorithm/"/>
    
      <category term="Leetcode" scheme="http://www.lexzhao.top/tags/Leetcode/"/>
    
      <category term="DP" scheme="http://www.lexzhao.top/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>InterleavingString</title>
    <link href="http://www.lexzhao.top/2017/11/02/InterleabingString/"/>
    <id>http://www.lexzhao.top/2017/11/02/InterleabingString/</id>
    <published>2017-11-02T02:19:53.000Z</published>
    <updated>2017-11-05T14:48:14.898Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;动态规划问题到目前为止已经刷了差不多40余题，借几道题稍微做一个总结。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;97. Interleaving String&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://opeygftv2.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20171102104732.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.lexzhao.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Algorithm" scheme="http://www.lexzhao.top/tags/Algorithm/"/>
    
      <category term="Leetcode" scheme="http://www.lexzhao.top/tags/Leetcode/"/>
    
      <category term="DP" scheme="http://www.lexzhao.top/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>MinimumASCIIDeleteSum</title>
    <link href="http://www.lexzhao.top/2017/11/02/MinimumASCIIDeleteSum/"/>
    <id>http://www.lexzhao.top/2017/11/02/MinimumASCIIDeleteSum/</id>
    <published>2017-11-02T02:19:08.000Z</published>
    <updated>2017-11-05T14:49:09.241Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;712. Minimum ASCII Delete Sum for Two Strings&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://opeygftv2.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20171102110943.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.lexzhao.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Algorithm" scheme="http://www.lexzhao.top/tags/Algorithm/"/>
    
      <category term="Leetcode" scheme="http://www.lexzhao.top/tags/Leetcode/"/>
    
      <category term="DP" scheme="http://www.lexzhao.top/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>CountRepetition</title>
    <link href="http://www.lexzhao.top/2017/11/02/CountRepetition/"/>
    <id>http://www.lexzhao.top/2017/11/02/CountRepetition/</id>
    <published>2017-11-02T02:15:40.000Z</published>
    <updated>2017-11-05T06:10:20.291Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;466. Count The Repetitions&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://opeygftv2.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20171102111759.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.lexzhao.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Algorithm" scheme="http://www.lexzhao.top/tags/Algorithm/"/>
    
      <category term="Leetcode" scheme="http://www.lexzhao.top/tags/Leetcode/"/>
    
      <category term="DP" scheme="http://www.lexzhao.top/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>Strange priter</title>
    <link href="http://www.lexzhao.top/2017/10/19/Strange-priter/"/>
    <id>http://www.lexzhao.top/2017/10/19/Strange-priter/</id>
    <published>2017-10-19T10:26:55.000Z</published>
    <updated>2017-11-05T06:09:23.824Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;664. Strange Printer&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://opeygftv2.bkt.clouddn.com/strangepriter.JPG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这道题的难度感觉是很大的&lt;/strong&gt;，目前想到的方法是 &lt;strong&gt;&amp;lt;O(n^3)&lt;/strong&gt;,（其中n小于或等于字符串长度）是否存在更低时间复杂度，例如能否将某个维度降到logn级别还在进一步思考当中。&lt;br&gt;直接看代码&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.lexzhao.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Algorithm" scheme="http://www.lexzhao.top/tags/Algorithm/"/>
    
      <category term="Leetcode" scheme="http://www.lexzhao.top/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Matchstickes to Square</title>
    <link href="http://www.lexzhao.top/2017/09/15/Matchstickes-to-Square/"/>
    <id>http://www.lexzhao.top/2017/09/15/Matchstickes-to-Square/</id>
    <published>2017-09-15T09:16:10.000Z</published>
    <updated>2017-11-05T06:12:34.747Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;473. Matchsticks to Square&lt;/strong&gt;&lt;/p&gt;

    
    </summary>
    
      <category term="技术" scheme="http://www.lexzhao.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Algorithm" scheme="http://www.lexzhao.top/tags/Algorithm/"/>
    
      <category term="Leetcode" scheme="http://www.lexzhao.top/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Remove Invalid Parentheses</title>
    <link href="http://www.lexzhao.top/2017/09/13/Remove-Invalid-Parentheses/"/>
    <id>http://www.lexzhao.top/2017/09/13/Remove-Invalid-Parentheses/</id>
    <published>2017-09-13T09:48:01.000Z</published>
    <updated>2017-11-05T06:07:36.202Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;301. Remove Invalid Parentheses&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://opeygftv2.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20170913174831.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.lexzhao.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Algorithm" scheme="http://www.lexzhao.top/tags/Algorithm/"/>
    
      <category term="Leetcode" scheme="http://www.lexzhao.top/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Binary Tree Maximum Path Sum</title>
    <link href="http://www.lexzhao.top/2017/09/13/Binary-Tree-Maximum-Path-Sum/"/>
    <id>http://www.lexzhao.top/2017/09/13/Binary-Tree-Maximum-Path-Sum/</id>
    <published>2017-09-13T08:09:36.000Z</published>
    <updated>2017-11-05T06:14:20.698Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;124. Binary Tree Maximum Path Sum&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://opeygftv2.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20170913161221.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;这道题需要注意的地方是二叉树节点值可能为负数，因此在确定是否将左右子树最大值引入时，应该同0进行比较，同时应在每个节点处判断是否以该节点作为Sequence的根节点。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.lexzhao.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Algorithm" scheme="http://www.lexzhao.top/tags/Algorithm/"/>
    
      <category term="Leetcode" scheme="http://www.lexzhao.top/tags/Leetcode/"/>
    
  </entry>
  
</feed>
